<!DOCTYPE html>
<html>

<head>
  <style>
    body {
      margin: 0;
      padding: 0;
    }

    #map {
      position: absolute;
      top: 0;
      bottom: 0;
      width: 100%;
    }
  </style>
</head>

<body>
  <div id='map'></div>

  <!-- Create a sidebar with buttons for each option -->
  <div class='absolute fl my24 mx24 py24 px24 bg-gray-faint round'>
    <form id='params'>
      <h4 class='txt-m txt-bold mb6'>Chose a travel mode:</h4>
      <div class='mb12 mr12 toggle-group align-center'>
        <label class='toggle-container'>
          <input name='profile' type='radio' value='walking'>
          <div class='toggle toggle--active-null toggle--null'>Walking</div>
        </label>
        <label class='toggle-container'>
          <input name='profile' type='radio' value='cycling' checked>
          <div class='toggle toggle--active-null toggle--null'>Cycling</div>
        </label>
        <label class='toggle-container'>
          <input name='profile' type='radio' value='driving'>
          <div class='toggle toggle--active-null toggle--null'>Driving</div>
        </label>
      </div>
      <h4 class='txt-m txt-bold mb6'>Chose a maximum duration:</h4>
      <div class='mb12 mr12 toggle-group align-center'>
        <label class='toggle-container'>
          <input name='duration' type='radio' value='10' checked>
          <div class='toggle toggle--active-null toggle--null'>10 min</div>
        </label>
        <label class='toggle-container'>
          <input name='duration' type='radio' value='20'>
          <div class='toggle toggle--active-null toggle--null'>20 min</div>
        </label>
        <label class='toggle-container'>
          <input name='duration' type='radio' value='30'>
          <div class='toggle toggle--active-null toggle--null'>30 min</div>
        </label>
    </form>
  </div>

  <script>
    // Add your Mapbox access token
    mapboxgl.accessToken = 'pk.eyJ1IjoibXBvdHRlciIsImEiOiJjajAxZGltM3UwNjF2MzJsczVnN3R2eTNnIn0._Sj0HRLt8VTQGTojMWYFfQ';
    var map = new mapboxgl.Map({
      container: 'map', // Specify the container ID
      style: 'mapbox://styles/mpotter/ck0skistbess61dmvq1uft4oo', // Specify which map style to use
      center: [-87.636127, 41.892699], // Specify the starting position
      zoom: 13.5, // Specify the starting zoom
    });

    // Create variables to use in getIso()
    var urlBase = 'https://api.mapbox.com/isochrone/v1/mapbox/';
    var lon = -87.642730;
    var lat = 41.891792;
    var profile = 'walking';
    var minutes = 20;

    // Create a function that sets up the Isochrone API query then makes an Ajax call
    function getIso() {
      var query = urlBase + profile + '/' + lon + ',' + lat + '?contours_minutes=' + minutes + '&polygons=true&access_token=' + mapboxgl.accessToken;

      $.ajax({
        method: 'GET',
        url: query
      }).done(function(data) {
        // Set the 'iso' source's data to what's returned by the API query
        map.getSource('iso').setData(data);
      })
    };

    var marker = new mapboxgl.Marker({
      'color': '#314ccd',
    });

    // Create a LngLat object to use in the marker initialization
    var lngLat = {
      lon: lon,
      lat: lat
    };

    map.on('load', function() {
      // When the map loads, add the source and layer
      map.addSource('iso', {
        type: 'geojson',
        data: {
          "type": 'FeatureCollection',
          "features": []
        }
      });

      map.addLayer({
        'id': 'isoLayer',
        'type': 'fill',
        // Use "iso" as the data source for this layer
        'source': 'iso',
        'layout': {},
        'paint': {
          // The fill color for the layer is set to a light purple
          'fill-color': '#5a3fc0',
          'fill-opacity': 0.25,
          'fill-outline-color': 'red'
        }
      }, "poi-label");
      // Initialize the marker at the query coordinates
      marker.setLngLat(lngLat).addTo(map);

      // Make the API call
      getIso();

      //add layers for blip
      map.addSource('point', {
          "type": "geojson",
          "data": {
              "type": "Point",
              "coordinates": [
                  -87.646196, 41.895594
              ]
          }
      });
      map.addLayer({
          "id": "point",
          "source": "point",
          "type": "circle",
          "paint": {
              "circle-radius": initialRadius,
              "circle-radius-transition": {duration: 0},
              "circle-opacity-transition": {duration: 0},
              "circle-color": "#ffffff"
          }
      });
      map.addLayer({
          "id": "point1",
          "source": "point",
          "type": "circle",
          "paint": {
              "circle-radius": initialRadius,
              "circle-color": "#007cbf"
          }
      });
    });
    animateMarker(0);

    // Target the "params" form in the HTML portion of your code
    var params = document.getElementById('params');

    // When a user changes the value of profile or duration by clicking a button, change the parameter's value and make the API query again
    params.addEventListener('change', function(e) {
      if (e.target.name === 'profile') {
        profile = e.target.value;
        getIso();
      } else if (e.target.name === 'duration') {
        minutes = e.target.value;
        getIso();
      }
    });
  </script>
</body>

</html>
