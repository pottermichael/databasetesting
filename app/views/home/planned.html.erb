<html>
  <body>
    <div id='map'></div>
    <nav id="menu"></nav>
    <div id='console'>
      <h1>Planned Developments</h1>
      <div class='session'>
        <h2>Property Type</h2>
        <div class='row' id='filters'>
          <input id='all' type='radio' name='toggle' value='all' checked='checked'>
          <label for='all'>All</label>
          <input id="Office" type="radio" name="toggle" value="Office">
          <label for='Office'>Office</label>
          <input id="Resi" type="radio" name="toggle" value="Resi">
          <label for='Resi'>Mutlifamily</label>
        </div>
      </div>
    </div>

    <script>

      mapboxgl.accessToken = 'pk.eyJ1IjoibXBvdHRlciIsImEiOiJjajAxZGltM3UwNjF2MzJsczVnN3R2eTNnIn0._Sj0HRLt8VTQGTojMWYFfQ';
      var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mpotter/ck3ex1vs41ol01cpo6uqt8nkf',
        center: [-87.636127, 41.892699],
        zoom: 13.5,
        attributionControl: false
      });

      map.on('load', function () {
        var filterType = ['!=',['string',['get', 'use']],'placeholder'];

        // Create a year property value based on time used to filter against.

        d3.json("/data/planned.geojson").then(function (data) {

          map.addSource('resi', {
            'type': 'geojson',
            data: data
          });
          map.addLayer({
            'id': 'residential-circles',
            'type': 'circle',
            'source': 'resi',
            'paint': {
              'circle-color': [
                'match',
                [
                  'get', 'use'
                ],
                'Resi',
                  '#fbb03b',
                'Office',
                  '#0E9447',
                /*other*/
                '#ccc'
              ],
              'circle-opacity': .75,
              'circle-radius': [
                'interpolate',
                ['linear'],
                [
                  'number',
                  [
                    'get', 'gfa'
                  ]
                ],
                50000, 7.5,
                1500000, 35
              ]
            }
          });
          map.addLayer({
            'id': 'residential-labels',
            'type': 'symbol',
            'source': 'resi',
            'layout': {
              'text-field': [
                'to-string',
                [
                  'get', 'project'
                ]
              ],
              'text-font': [
                'Open Sans Bold', 'Arial Unicode MS Bold'
              ],
              'text-size': [
                'interpolate',
                ['linear'],
                ['zoom'],
                4,9,
                6,12
              ],
              'text-max-width': 5
            },
            'paint': {
              'text-color': 'rgba(0,0,0,0.5)'
            }
          });

          // radio buttons for filtering
          document.getElementById('filters').addEventListener('change', function (e) {
            var type = e.target.value;
            // update the map filter
            if (type === 'all') {
              filterType = ['!=',['string',['get', 'use']],'placeholder'];
            } else if (type === 'Office') {
              filterType = ['match',['get', 'use'],'Office',true,false];
            } else if (type === 'Resi') {
              filterType = ['match',['get', 'use'],'Resi',true,false];
            } else {
              console.log('error');
            };
            map.setFilter('residential-circles', ['all', filterType]);
            map.setFilter('residential-labels', ['all', filterType]);
          });

          //add layers for blip
          map.addSource('point', {
            "type": "geojson",
            "data": {
              "type": "Point",
              "coordinates": [-87.646196, 41.895594]
            }
          });

          map.addLayer({
            "id": "point",
            "source": "point",
            "type": "circle",
            "paint": {
              "circle-radius": initialRadius,
              "circle-radius-transition": {
                duration: 0
              },
              "circle-opacity-transition": {
                duration: 0
              },
              "circle-color": "#ffffff"
            }
          });

          map.addLayer({
            "id": "point1",
            "source": "point",
            "type": "circle",
            "paint": {
              "circle-radius": initialRadius,
              "circle-color": "#007cbf"
            }
          });
          animateMarker(0);
        });
      });
    </script>
  </body>
</html>
